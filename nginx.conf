server {
    server_name frigate.cc.robojackets.net;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    location / {
        proxy_pass http://frigate-nginx;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        proxy_buffers 8 16k;
        proxy_buffer_size 16k;
    }

    location ~* /api/.*\.(jpg|jpeg|png|webp|gif)$ {
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://frigate-api;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location /api/ {
        add_header Cache-Control "no-store";
        expires off;
        proxy_pass http://frigate-api/;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        auth_request_set $auth_resp_user $upstream_http_x_vouch_user;
        proxy_set_header Remote-User $auth_resp_user;

        proxy_cache frigate_api;
        proxy_cache_lock on;
        proxy_cache_use_stale updating;
        proxy_cache_valid 200 5s;
        proxy_cache_bypass $http_x_cache_bypass;
        proxy_no_cache $should_not_cache;
        add_header X-Cache-Status $upstream_cache_status;

        location /api/vod/ {
            proxy_pass http://frigate-api/vod/;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;

            proxy_cache off;
        }

        location /api/login {
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass http://frigate-api/;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }

        location /api/stats {
            access_log off;
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass http://frigate-api;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }

        location /api/version {
            auth_request off;

            allow all;

            access_log off;
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass http://frigate-api;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }
    }

    location /assets/ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public";

        allow all;

        sub_filter 'href="/BASE_PATH/' 'href="/';
        sub_filter 'url(/BASE_PATH/' 'url(/';
        sub_filter '"/BASE_PATH/dist/' '"/dist/';
        sub_filter '"/BASE_PATH/js/' '"/js/';
        sub_filter '"/BASE_PATH/assets/' '"/assets/';
        sub_filter '"/BASE_PATH/locales/' '"/locales/';
        sub_filter '"/BASE_PATH/monacoeditorwork/' '"/assets/';
        sub_filter 'return"/BASE_PATH/"' 'return window.baseUrl';
        sub_filter '<body>' '<body><script>window.baseUrl="/";</script>';
        sub_filter_types text/css application/javascript;
        sub_filter_once off;

        try_files $uri =404;
    }

    location /fonts/ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public";

        allow all;

        try_files $uri =404;
    }

    location /images/ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public";

        allow all;

        try_files $uri =404;
    }

    location /locales/ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public";

        allow all;

        try_files $uri =404;
    }

    location ~ ^/.*-([A-Za-z0-9]+)\.webmanifest$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public";
        default_type application/json;
        proxy_set_header Accept-Encoding "";
        sub_filter_once off;
        sub_filter_types application/json;
        sub_filter '"start_url": "/BASE_PATH/"' '"start_url" : "/"';
        sub_filter '"src": "/BASE_PATH/' '"src": "/';
    }

    location /ws {
        proxy_pass http://frigate-ws/;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location /live/jsmpeg/ {
        proxy_pass http://frigate-jsmpeg/;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    auth_request /validate;

    location = /validate {
        internal;

        proxy_pass http://vouch;

        proxy_set_header Host $host;
        proxy_set_header Cookie $http_cookie;

        proxy_pass_request_headers off;
        proxy_pass_request_body off;

        proxy_cache_valid 200 1h;
        proxy_cache frigate_auth;
        proxy_cache_methods GET;
        proxy_cache_key $cookie_vouchcookie;

        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
        auth_request_set $auth_resp_user $upstream_http_x_vouch_user;
    }

    error_page 401 = @error401;

    location @error401 {
        return 302 https://vouch.cc.robojackets.net/login?url=https://frigate.cc.robojackets.net$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
    }
}
